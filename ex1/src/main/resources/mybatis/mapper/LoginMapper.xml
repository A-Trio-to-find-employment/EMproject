<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.example.demo.mapper.LoginMapper">
	<select id="getUserById" parameterType="String" 
							resultType="Users">
		select user_id, password, user_name, address, address_detail, zipcode, email,
		to_char(birth,'YYYY-MM-DD') "birth", phone, grade from users
		where user_id=#{user_id}
	</select>
	<select id="getUser" parameterType="Users" 
							resultType="Users">
		select user_id, password, user_name, address, address_detail, zipcode, email,
		to_char(birth,'YYYY-MM-DD') "birth", phone, grade from users
		where user_id=#{user_id} and password=#{password}
	</select>
	<update id="modifyUser" parameterType="Users">
		update users set password = #{password}, user_name = #{user_name}, 
		address = #{address}, address_detail = #{address_detail}, zipcode =  #{zipcode},
		email = #{email}, birth =  to_date(#{birth},'YYYY/MM/DD'), phone = #{phone}
		where user_id = #{user_id}
	</update>
	<select id="getUserList" parameterType="StartEndKey" resultType="Users">
		SELECT * 
    	FROM (
        	SELECT ROWNUM rn, a.* 
        	FROM (
           		SELECT 
                	user_id, 
                	user_name, 
                	to_char(birth,'YYYY.MM.DD') "birth", 
                	phone 
            	FROM users
        	) a 
        	WHERE rownum <![CDATA[<=]]> #{end}
    	)
    	WHERE rn > #{start}
    	ORDER BY rn
	</select>
	<select id="getUserListSearch" parameterType="StartEndKey" resultType="Users">
		SELECT * 
    	FROM (
        	SELECT ROWNUM rn, a.* 
        	FROM (
           		SELECT 
                	user_id, 
                	user_name, 
                	to_char(birth,'YYYY.MM.DD') "birth", 
                	phone 
            	FROM users
            	WHERE user_name LIKE '%' || #{key} || '%'
        	) a 
        	WHERE rownum <![CDATA[<=]]> #{end}
    	)
    	WHERE rn > #{start}
    	ORDER BY rn
	</select>
	<select id="getUserCount" resultType="Integer">
		select count(user_id) from users
	</select>
	<select id="getUserCountSearch" parameterType="String" resultType="Integer">
		select count(user_id) from users where user_id like '%' || #{SEARCH} || '%'
	</select>
	<select id="getUserByIdAdmin" parameterType="String" 
							resultType="Users">
		select user_id, password, user_name, address, address_detail, zipcode, email,
		to_char(birth,'YYYY.MM.DD') "birth", phone, grade from users
		where user_id=#{user_id}
	</select>
	
	<update id="updateUserGrade" parameterType="Users">
		update users set grade = #{grade} where user_id = #{user_id}
	</update>
	
	<update id="updateCount" parameterType="String">
		update users set count = count + 1 where user_id=#{user_id}
	</update>
</mapper>

	




