<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.example.demo.mapper.GoodsMapper">
	<select id="getGoodsList" parameterType="StartEnd" resultType="Book">
		select isbn, book_title, authors, publisher, price, stock
		from(select rownum rn, a.*
			from (select isbn, book_title, 
				(SELECT LISTAGG(author, ', ') WITHIN GROUP (ORDER BY author) 
		 		FROM book_author 
		 		WHERE isbn = book.isbn) AS authors, publisher, price, stock
		 		from book) a)
				where rn > #{start} and rn <![CDATA[<]]> #{end}
	</select>
	<select id="getGoodsDetail" parameterType="java.lang.Long" resultType="Book">
		select image_name, isbn, book_title, 
		(SELECT LISTAGG(author, ', ') WITHIN GROUP (ORDER BY author) 
 		FROM book_author 
 		WHERE isbn = book.isbn) AS authors, publisher, cat_id, price, stock, 
 		to_char(pub_date, 'YYYY-MM-DD') as pub_date
 		from book where isbn = #{isbn, jdbcType=BIGINT}
	</select>
	<select id="getGoodsCount" resultType="Integer">
		select count(*) from book 
	</select>
	<select id="getGoodsCountList" resultType="Integer" parameterType="String">
		select count(*) from book where book_title like '%'|| #{book_title, jdbcType=VARCHAR} ||'%' 
	</select>
	
	<select id="getGoodsByName" parameterType="StartEnd" resultType="Book">
		select isbn, book_title, authors, publisher, price, stock
		from(select rownum rn, a.*
			from (select isbn, book_title, 
				(SELECT LISTAGG(author, ', ') WITHIN GROUP (ORDER BY author) 
		 		FROM book_author 
		 		WHERE isbn = book.isbn) AS authors, publisher, price, stock
		 		from book where book_title like '%' || #{title,jdbcType=VARCHAR} || '%') a )
				where rn > #{start} and rn <![CDATA[<]]> #{end}
	</select>
	<update id="updateStock" parameterType="java.lang.Long">
		update book set stock=#{stock} where isbn = #{isbn}
	</update>
	<update id="updateGoods" parameterType="Book">
        update book set image_name=#{image_name}, book_title=#{book_title},
        publisher=#{publisher}, pub_date=to_date(#{pub_date},'YYYY/MM/DD'), price=#{price}, stock=#{stock} 
        where isbn=#{isbn}
    </update>
	<select id="getIsbnDup" parameterType="java.lang.Long" resultType="Integer">
		select count(*) from book where isbn=#{isbn, jdbcType=BIGINT}
	</select>
	<insert id="addGoods" parameterType="Book">
        insert into book (image_name, isbn, book_title, publisher, pub_date, reg_date, price, stock, total_rating)
        values (#{image_name}, #{isbn}, #{book_title}, 
        #{publisher}, to_date(#{pub_date},'YYYY/MM/DD'), sysdate, #{price}, #{stock}, 0)
    </insert>
    <update id="insertStock" parameterType="map">
    	update book set stock = stock + #{amount} where isbn = #{isbn}
    </update>
    
    <insert id="addBookAuthors" parameterType="map">
        insert into book_author (isbn, author)
        values (#{isbn}, #{author})
    </insert>
	<select id="getBookAuthors" parameterType="Long" resultType="String">
        select author from book_author where isbn = #{isbn, jdbcType=BIGINT}
    </select>
	<select id="getCategoriesByParentId" parameterType="String" resultType="Category">
	    SELECT cat_id, cat_name FROM categories 
		where (parent_id = #{parent_id} OR (#{parent_id} IS NULL AND parent_id IS NULL))
	</select>
	<select id="getCategoryPath" parameterType="String" resultType="String">
	    SELECT LISTAGG(cat_name, ' > ') WITHIN GROUP (ORDER BY LEVEL DESC) AS cat_path
	    FROM categories
	    START WITH cat_id = #{cat_id}
	    CONNECT BY PRIOR parent_id = cat_id
	</select> 
	<select id="findCategoryPathsById" parameterType="java.util.List" resultType="String">
	    SELECT LISTAGG(cat_name, ' > ') WITHIN GROUP (ORDER BY LEVEL DESC) AS cat_path
	    FROM categories
	    WHERE cat_id IN 
	    <foreach item="catId" collection="catIds" open="(" separator="," close=")">
	        #{catId}
	    </foreach>
	    CONNECT BY PRIOR parent_id = cat_id
	    START WITH cat_id IN 
	    <foreach item="catId" collection="catIds" open="(" separator="," close=")">
	        #{catId}
	    </foreach>
	</select>
	<delete id="deleteCatInfo" parameterType="java.lang.Long">
    	delete from book_categories where isbn=#{isbn}
    </delete>
	<insert id="addInfoCategory" parameterType="BookCategories">
		insert into book_categories (isbn, cat_id) values (#{isbn}, #{cat_id}) 
	</insert>
	<select id="getCategoryByIsbn" parameterType="java.lang.Long" resultType="String">
    	select cat_id from book_categories where isbn = #{isbn}
	</select>
	<update id="updateInfoCategory" parameterType="BookCategories">
		update book_categories set cat_id=#{cat_id} where isbn=#{isbn} 
	</update>
	<update id="updateBookAuthors" parameterType="map">
        update book_author set author=#{author} where isbn=#{isbn}
    </update>
    <delete id="deleteBookAuthors" parameterType="java.lang.Long">
    	delete from book_author where isbn=#{isbn}
    </delete>
    <delete id="deleteGoods" parameterType="java.lang.Long">
    	delete from book where isbn=#{isbn}
    </delete>
    <select id="getReplyCount" parameterType="Integer">
    	select count(*) from review where review_id=#{review_id}
    </select>
	<select id="getGoodsTitle" parameterType="java.lang.Long" resultType="String">
	 select book_title from book where isbn =#{isbn, jdbcType=BIGINT}
	</select>

	<delete id="deleteCategoriesByIsbn">
	    delete from book_categories 
	    where isbn = #{isbn}
	    and cat_id IN 
	    <foreach item="catId" collection="categoriesToDelete" open="(" separator="," close=")">
	        #{catId}
	    </foreach>
	</delete>
	<select id="checkBookCategoryExists" resultType="int">
    SELECT COUNT(*) FROM book_categories WHERE isbn = #{isbn} AND cat_id = #{catId}
</select>
</mapper>

	




