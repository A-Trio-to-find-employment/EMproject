<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ReviewMapper">
	
	<delete id="deleteReview" parameterType="Integer">
		delete from review where review_id=#{review_id}
	</delete>
	<insert id="writeReview" parameterType="Review">
		insert into review
		values (#{review_id},#{isbn},#{user_id},#{rating},#{content},sysdate,0)
	</insert>
	<select id="checkOrder" parameterType="map" resultType="Integer">
        select count(*) from orders o
        join orders_detail od on o.order_id = od.order_id
        where o.user_id = #{user_id} and od.isbn = #{isbn}
    </select>
	<select id="getReview" parameterType="java.lang.Long"
		resultType="Review">
		select review_id,isbn,user_id,rating,content,reg_date from
		review where isbn=#{isbn}
	</select>	
	
	<update id="increaseReportCount" parameterType="Integer">
		update review
		set singo = singo + 1
		where review_id = #{review_id}
	</update>

	<!-- 신고 횟수가 10 이상인 리뷰 삭제 -->
	<delete id="deleteReportedReviews">
		delete from review
		where singo >= 10
	</delete>
	<select id="ReviewList" parameterType="StartEnd" resultType="Review">
		select review_id, isbn,user_id, rating, content, reg_date 
		from (select rownum rank, a.*
		        from(
		        	select review_id, isbn, user_id, rating,content,
			     	to_char(reg_date,'YYYY/MM/DD') as "REG_DATE"
			     	from review where isbn=#{isbn} 
			     	order by rating desc 
			     	) a)
		where rank > #{start} and rank <![CDATA[<]]> #{end}	
	</select>
	<select id="getTotal" resultType="Integer" parameterType="java.lang.Long">
		select count(*) from review where isbn=#{isbn}
	</select>
	<select id="getTotalMine" parameterType="String" resultType="Integer">
		select count(*) 
			from orders o, orders_detail od, review r, book b
			where o.order_id = od.order_id and o.user_id = #{user_id} 
			and od.isbn = b.isbn and od.isbn = r.isbn and o.user_id = r.user_id

	</select>
	<select id="getMaxReview" resultType="Integer">
		select max(review_id) from review
	</select> 
	<select id="listReview" parameterType="StartEnd" resultType="MyReview">
		select order_id, to_char(created_at, 'YYYY-MM-DD') as created_at, book_title,
				content, to_char(reg_date, 'YYYY-MM-DD') as reg_date, review_id
				from (select rownum as rank, a. *
					from (select o.order_id, o.created_at, b.book_title, r.content, r.reg_date, r.review_id
						from orders o, orders_detail od, review r, book b
						where o.order_id = od.order_id and o.user_id = #{user_id} 
								and od.isbn = b.isbn and od.isbn = r.isbn and o.user_id = r.user_id
					) a
				)
				where rank > #{start} AND rank <![CDATA[<]]> #{end}
	</select>
</mapper>

	
	
	
	
	
	
	
	
	
	
	
	
	